@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using System.Net
@using System.Text.Json
@using System.Net.Http.Json
@using BlazorApp2.Request

@page "/"

<div class="btn-up btn-up_hide desktop-only"></div>


<div class="container_lk">
    <div>

        <EditForm Model="user"
        class="auth_back"
        OnValidSubmit="Auth">

            <DataAnnotationsValidator />

            <p>Логин</p>

            <span>@LoginResult</span>

            <InputText placeholder="Введите логин"
            class="auth"
            @bind-Value="user.Username" />
            <ValidationMessage For="() => user.Username" />

            <p>Пароль</p>

            <InputText placeholder="Введите пароль"
            class="auth"
            @bind-Value="user.Password" />
            <ValidationMessage For="() => user.Password" />


            @* <NavLink href="afterAuthoPage">Test link</NavLink> *@
            <button type="submit"
            class="authbutn">
                Войти
            </button>
        </EditForm>
    </div>

</div>


@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }
    [Inject]
    private HttpClient HttpClient { get; set; }

    private User user = new();


    private string LoginResult = "";

    private async Task Auth()
    {

        try
        {


            var response = await HttpClient.PostAsJsonAsync("UserLogin", user);

            if (response.StatusCode == HttpStatusCode.NotFound)
            {
                LoginResult = "Не правильный логин или пароль";
                return;
            }

            if (response.StatusCode == HttpStatusCode.OK)
            {
                string json = await response.Content.ReadAsStringAsync();
                var user = JsonSerializer.Deserialize<User>(json);
                if (user == null)
                {
                    LoginResult = "Такой пользователь не существует";
                }
                NavigationManager.NavigateTo("afterAuthoPage", true);
                return;
            }
        }

        catch (HttpRequestException e)
        {
            LoginResult = $"{e.Message}";
            return;
        }

        catch (Exception e)
        {
            LoginResult = $"{e.Message}";
            return;
        }

    }

}
